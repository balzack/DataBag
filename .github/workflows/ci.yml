name: CI

on:
  push:
    branches: [ "main", "publish-container-image" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Build React
      run: |
          npm install --global yarn
          cd net/web
          yarn install
          yarn build

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.10

    - name: Build Go
      run: |
          cd net/server
          go build databag
          
    - name: Go Test
      run: |
          cd net/server
          go test -v ./...
          
    - name: Jest Setup
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Jest ReactJs
      run: |
          cd net/web
          yarn jest --silent
  
    - name: Jest ReactNative
      run: |
          cd app/mobile
          yarn install
          yarn jest
  
    - name: Export
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: net/web/build/*

    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Get QEMU binaries for cross-compiling
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Extract container image tags and labels for use in the build step.
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push container image with associated labels and tags.
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    # Generate attestation
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
